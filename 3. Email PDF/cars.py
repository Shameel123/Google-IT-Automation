#!/usr/bin/env python3

import json
import locale
import sys


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  locale.setlocale(locale.LC_ALL, 'en_US.UTF8')

  max_revenue = {"revenue": 0}


  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item


    # TODO: also handle max sales


  max_sales = {"total_sales":0}
  for item in data:
    #item_price = locale.atof(item["price"].strip("$"))
    item_sales = item["total_sales"]
    if item_sales > max_sales["total_sales"]:
      item["revenue"] = item_sales
      max_sales = item


    # TODO: also handle most popular car_year
  car_year_popular = dict() #year:sales
  for item in data:
      car_year = item["car"]["car_year"]
      car_sale = [item["total_sales"]]
      #iterateDict={car_year:car_sale}
      if car_year in car_year_popular.keys(): #if there's year already inside keys then append list for sale values
          car_sale.append(car_sale)
          iterateDict={car_year:car_sale}
          print(car_sale,iterateDict)
      else:
          iterateDict={car_year:car_sale}


      car_year_popular.update(iterateDict)
      #car_year_popular_sorted = sorted(car_year_popular.items())
      #print(car_year_popular)
      #print(car_year_popular_sorted)
      #print(car_year_popular[1997])
      #print(car_year_popular.keys())

      # for i in car_year_popular:
      #     print(car_year_popular[i])



  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
      "The {} had the most sales: {}".format(
          max_sales["car"]["car_model"],max_sales["total_sales"]
      )
  ]
  #print(max_revenue)
  #print(max_sales)
  #print(max_sales["car"]["car_model"])

  # for i in car_year_popular[1997]:
  #     print(i)

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  # TODO: turn this into a PDF report

  # TODO: send the PDF report as an email attachment


if __name__ == "__main__":
  main(sys.argv)
